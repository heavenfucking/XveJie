<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhxp.web.mapper.CourseMapper">
	<resultMap id="BaseResultMap" type="com.zhxp.web.entity.Course">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="course_id" property="courseId" jdbcType="VARCHAR"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="class_id" property="classId" jdbcType="INTEGER"/>
		<result column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
		<result column="open_student_evaluate" property="openStudentEvaluate" jdbcType="INTEGER"/>
		<result column="open_teacher_evaluate" property="openTeacherEvaluate" jdbcType="INTEGER"/>
	</resultMap>
	<sql id="Base_Colmmn_List">
		id, course_id, name, teacher_id, class_id, open_student_evaluate, open_teacher_evaluate
	</sql>
	<!-- findAll -->
	<select id="getCourseList" resultType="com.zhxp.web.dto.CourseDto">
		select
		    cou.id as id,
		    cou.course_id as courseId,
		    cou.name as name,
		    tea.name as teacherName,
		    concat(cla.name, '(', cla.enter_time, ')') as className,
		    open_student_evaluate as openStudentEvaluate,
		    open_teacher_evaluate as openTeacherEvaluate
		from
		    course_info cou
		inner join
		    class_info  cla
		on
		    cou.class_id = cla.id
		inner join
		    teacher_info tea
		on
		   cou.teacher_id = tea.id
		order by
		   cou.id
		desc
	</select>

	<insert id="insert" parameterType="com.zhxp.web.entity.Course">
		insert into Course_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="courseId!=null">
				course_id,
			</if>
			<if test="name!=null">
				name,
			</if>
			<if test="classId!=null">
				class_id,
			</if>
			<if test="teacherId!=null">
				teacher_id,
			</if>
			<if test="openStudentEvaluate!=null">
				open_student_evaluate,
			</if>
			<if test="openTeacherEvaluate!=null">
				open_teacher_evaluate,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="courseId!=null">
				#{courseId, jdbcType=VARCHAR},
			</if>
			<if test="name!=null">
				#{name, jdbcType=VARCHAR},
			</if>
			<if test="classId!=null">
				#{classId, jdbcType=INTEGER},
			</if>
			<if test="teacherId!=null">
				#{teacherId, jdbcType=INTEGER},
			</if>
			<if test="openStudentEvaluate!=null">
				#{openStudentEvaluate, jdbcType=INTEGER},
			</if>
			<if test="openTeacherEvaluate!=null">
				#{openTeacherEvaluate, jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="java.lang.Integer">
		update Course_info
		<set>
			<if test="courseId!=null">
				course_id = #{courseId, jdbcType=VARCHAR},
			</if>
			<if test="name!=null">
				name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="classId!=null">
				class_id = #{classId, jdbcType=INTEGER},
			</if>
			<if test="teacherId!=null">
				teacher_id = #{teacherId, jdbcType=INTEGER},
			</if>
			<if test="openStudentEvaluate!=null">
				open_student_evaluate = #{openStudentEvaluate, jdbcType=INTEGER},
			</if>
			<if test="openTeacherEvaluate!=null">
				open_teacher_evaluate = #{openTeacherEvaluate, jdbcType=INTEGER},
			</if>
		</set>
		where
		   id = #{id, jdbcType=INTEGER}
	</update>


	<delete id="delete">
		delete from Course_info where id = #{id, jdbcType=INTEGER}
	</delete>

	<select id="selectCourseInfoById" resultMap="BaseResultMap">
		select
		   <include refid="Base_Colmmn_List"/>
		from
		   Course_info
		where
		   id = #{id, jdbcType=INTEGER}
	</select>

	<update id="setEvaluate" parameterType="java.lang.Integer">
		update
		    Course_info
		<set>
		  <if test="type==1">
			  open_student_evaluate = #{status, jdbcType=INTEGER}
		  </if>
		  <if test="type==2">
			  open_teacher_evaluate = #{status, jdbcType=INTEGER}
		  </if>
		</set>
		where
		   id = #{id, jdbcType=INTEGER}
	</update>
	

</mapper>